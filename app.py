import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(filename="log.txt", level=logging.INFO)

def log_action(action):
    logging.info(f"{action} | {pd.Timestamp.now()}")

st.set_page_config(page_title="üßº –ß–∏—Å—Ç–∫–∞ –∏ –ê–Ω–∞–ª–∏–∑ –î–∞–Ω–Ω—ã—Ö", layout="wide")
st.title("üìä –ß–∏—Å—Ç–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")

# –§—É–Ω–∫—Ü–∏–∏
def try_read_csv(file):
    """–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å CSV —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∞–º–∏"""
    encodings = ['utf-8', 'utf-16', 'cp1251', 'ISO-8859-1']
    for enc in encodings:
        try:
            return pd.read_csv(file, encoding=enc)
        except Exception:
            continue
    raise ValueError("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å CSV —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∞–º–∏")

def save_df_to_file(dataframe, filename):
    filepath = os.path.join("data", filename)
    dataframe.to_csv(filepath, index=False)
    return filepath

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
st.header("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
df = None
upload_method = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏", ["–ò–∑ –ø–∞–ø–∫–∏ data/", "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"])
if upload_method == "–ò–∑ –ø–∞–ø–∫–∏ data/":
    files = [f for f in os.listdir("data") if f.endswith((".csv", ".xlsx", ".xls"))]
    if files:
        file_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª", files)
        path = os.path.join("data", file_choice)
        try:
            if file_choice.endswith(".csv"):
                df = try_read_csv(path)
            else:
                df = pd.read_excel(path)
            log_action(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {file_choice}")
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
    else:
        st.warning("‚ö†Ô∏è –í –ø–∞–ø–∫–µ data/ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤.")
else:
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–ª–∏ Excel", type=["csv", "xlsx", "xls"])
    if uploaded_file:
        try:
            if uploaded_file.name.endswith(".csv"):
                df = try_read_csv(uploaded_file)
            else:
                df = pd.read_excel(uploaded_file)
            log_action(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {uploaded_file.name}")
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

if df is not None:
    st.subheader("üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
    st.dataframe(df)

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
    if st.checkbox("üîç –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"):
        col = st.selectbox("–ö–æ–ª–æ–Ω–∫–∞", df.columns)
        vals = st.multiselect("–ó–Ω–∞—á–µ–Ω–∏—è", df[col].unique())
        if vals:
            df = df[df[col].isin(vals)]
            log_action(f"–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ {col}: {vals}")

    # –ü—Ä–æ–ø—É—Å–∫–∏
    st.subheader("‚ùì –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    if df.isnull().sum().sum() > 0:
        st.write(df.isnull().sum())
        method = st.radio("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫–∏ –º–µ—Ç–æ–¥–æ–º:", ["–°—Ä–µ–¥–Ω–µ–µ", "–ú–µ–¥–∏–∞–Ω–∞", "–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫–∏", "–ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å"])
        if method == "–°—Ä–µ–¥–Ω–µ–µ":
            df = df.fillna(df.mean(numeric_only=True))
            st.success("‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ —Å—Ä–µ–¥–Ω–∏–º–∏")
            log_action("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤: —Å—Ä–µ–¥–Ω–µ–µ")
        elif method == "–ú–µ–¥–∏–∞–Ω–∞":
            df = df.fillna(df.median(numeric_only=True))
            st.success("‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –º–µ–¥–∏–∞–Ω–æ–π")
            log_action("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤: –º–µ–¥–∏–∞–Ω–∞")
        elif method == "–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫–∏":
            df = df.dropna()
            st.success("‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–ø—É—Å–∫–∞–º–∏")
            log_action("–£–¥–∞–ª–µ–Ω—ã —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")
    else:
        st.success("‚úÖ –ù–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")

    # –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    if st.checkbox("üßπ –£–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã"):
        before = len(df)
        df = df.drop_duplicates()
        after = len(df)
        st.success(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {before - after} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
        log_action(f"–£–¥–∞–ª–µ–Ω–æ {before - after} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")

    # –í—ã–±—Ä–æ—Å—ã
    if st.checkbox("üì¶ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—ã–±—Ä–æ—Å—ã (Boxplot)"):
        col = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É", df.select_dtypes(include=np.number).columns)
        fig, ax = plt.subplots()
        sns.boxplot(x=df[col], ax=ax)
        st.pyplot(fig)

    # –ê–≥—Ä–µ–≥–∞—Ü–∏—è –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    st.subheader("üìà –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")
    numeric_cols = df.select_dtypes(include=np.number).columns.tolist()
    group_col = st.selectbox("–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ", df.columns)
    agg_col = st.selectbox("–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–æ–Ω–∫—É", numeric_cols)
    agg_func = st.selectbox("–§—É–Ω–∫—Ü–∏—è", ["mean", "sum", "count", "min", "max"])
    grouped = df.groupby(group_col)[agg_col].agg(agg_func).reset_index()
    st.write(grouped)

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    chart_type = st.radio("–¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞", ["Bar", "Line", "Pie"])
    fig, ax = plt.subplots()
    if chart_type == "Bar":
        ax.bar(grouped[group_col], grouped[agg_col])
    elif chart_type == "Line":
        ax.plot(grouped[group_col], grouped[agg_col])
    elif chart_type == "Pie":
        ax.pie(grouped[agg_col], labels=grouped[group_col], autopct="%1.1f%%")
    st.pyplot(fig)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    st.subheader("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    file_name = st.text_input("–ò–º—è —Ñ–∞–π–ª–∞", "result.csv")
    if st.button("üì• –°–∫–∞—á–∞—Ç—å CSV"):
        st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å", df.to_csv(index=False), file_name, "text/csv")
        log_action(f"–°–∫–∞—á–∞–Ω CSV: {file_name}")
    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–∞–ø–∫—É data/"):
        path = save_df_to_file(df, file_name)
        st.success(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {path}")
        log_action(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ø–∞–ø–∫—É: {file_name}")